{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Button.js","services/persons.js","components/Person.js","components/Persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","filter","handleFilterChange","value","onChange","PersonForm","props","onSubmit","addRecord","newName","handleNameChange","newNumber","handleNumberChange","type","Button","onClick","text","baseUrl","axios","get","person","post","id","person_url","delete","put","Person","setPersons","persons","name","number","window","confirm","PersonsService","then","response","console","log","catch","err","remove_person","Persons","map","toLowerCase","indexOf","key","Notification","message","className","notificationType","App","useState","setNewName","setNewNumber","setFilter","notificationMessage","setNotificationMessage","handleNotification","notification_type","setTimeout","useEffect","data","event","target","curr_person","preventDefault","some","updated_record","new_record","concat","ReactDOM","render","document","getElementById"],"mappings":"0NASeA,EAPA,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,mBAAV,OACX,mDACuB,2BAAOC,MAAOF,EAAQG,SAAUF,MCyB5CG,EA3BI,SAACC,GAEhB,OACI,0BAAMC,SAAUD,EAAME,WACpB,qCAEE,2BACEL,MAAOG,EAAMG,QACbL,SAAUE,EAAMI,oBAGpB,uCAEE,2BACEP,MAAOG,EAAMK,UACbP,SAAUE,EAAMM,sBAGpB,6BACE,4BAAQC,KAAK,UAAb,UCXGC,EARA,SAAC,GAAD,IAAEC,EAAF,EAAEA,QAASC,EAAX,EAAWA,KAAX,OAEX,4BAAQD,QAASA,GACZC,I,gBCJHC,EAAU,eAmBD,EAjBA,WACX,OAAOC,IAAMC,IAAIF,IAgBN,EAbH,SAACG,GACT,OAAOF,IAAMG,KAAKJ,EAASG,IAYhB,EALA,SAACE,GACZ,IAAMC,EAAU,UAAMN,EAAN,YAAiBK,GACjC,OAAOJ,IAAMM,OAAOD,IAGT,EATA,SAACH,GACZ,OAAOF,IAAMO,IAAN,UAAcR,EAAd,YAAyBG,EAAOE,IAAMF,ICkBlCM,EAVA,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,QAASR,EAAxB,EAAwBA,OAAxB,OAEX,6BACI,8BAAOA,EAAOS,KAAd,IAAqBT,EAAOU,QAC5B,8BAAM,kBAAC,EAAD,CAAQf,QAAS,kBApBT,SAACY,EAAYC,EAASN,EAAIO,GAExCE,OAAOC,QAAP,uCAA+CH,EAA/C,OACAI,EACSX,GACRY,MAAM,SAAAC,GACHC,QAAQC,IAAKF,GACbR,EAAYC,EAAQ3B,QAAO,SAAAmB,GAAM,OAAIA,EAAOE,KAAOA,SAEtDgB,OAAO,SAAAC,GACJH,QAAQC,IAAK,aAUYG,CAAeb,EAAYC,EAASR,EAAOE,GAAIF,EAAOS,OAAQb,KAAK,YAChG,+BCLOyB,EAhBC,SAAC,GAAD,IAAGd,EAAH,EAAGA,WAAYC,EAAf,EAAeA,QAAS3B,EAAxB,EAAwBA,OAAxB,OAEZ2B,EAAQc,KAAK,SAAAtB,GAET,OAAkE,IAA9DA,EAAOS,KAAKc,cAAcC,QAAS3C,EAAO0C,eAEnC,kBAAC,EAAD,CAAQE,IAAKzB,EAAOS,KAAMF,WAAYA,EAAYC,QAASA,EAASR,OAAQA,IAIhF,OCSA0B,EArBM,SAAC,GAAuB,IAArBjC,EAAoB,EAApBA,KAAMkC,EAAc,EAAdA,QAE1B,OAAgB,OAAZA,EACO,MAEXX,QAAQC,IAAIxB,GACZuB,QAAQC,IAAIU,GAMR,yBAAKC,UAAWnC,GACXkC,KCRTE,EAAmB,KAsIRC,EApIH,WAAO,IAAD,EAEgBC,mBAAS,IAFzB,mBAERvB,EAFQ,KAECD,EAFD,OAGgBwB,mBAAS,IAHzB,mBAGR1C,EAHQ,KAGC2C,EAHD,OAIoBD,mBAAS,IAJ7B,mBAIRxC,EAJQ,KAIG0C,EAJH,OAKcF,mBAAU,IALxB,mBAKRlD,EALQ,KAKAqD,EALA,OAMwCH,mBAAS,MANjD,mBAMRI,EANQ,KAMaC,EANb,KAoBVC,EAAqB,SAACC,EAAmBX,GAE7CE,EAAmBS,EACnBF,EAAwBT,GAExBY,YAAY,WACVV,EAAmB,KACnBO,EAAwB,QACvB,MA+EL,OAFAI,qBAXoB,WAElBxB,QAAQC,IAAKT,GACbK,IAEGC,MAAK,SAAAC,GACJC,QAAQC,IAAI,4BACZV,EAAWQ,EAAS0B,WAIF,IAGtB,6BAEE,kBAAC,EAAD,CAAchD,KAAMoC,EAAkBF,QAASQ,IAE/C,yCAEA,kBAAC,EAAD,CAAQtD,OAAQA,EAAQC,mBAlGD,SAAC4D,GACxBR,EAAWQ,EAAMC,OAAO5D,UAmGxB,yCAEA,kBAAC,EAAD,CACEM,QAASA,EAASC,iBA/GC,SAACoD,GACtBV,EAAYU,EAAMC,OAAO5D,QA+GvBQ,UAAWA,EAAWC,mBA5GD,SAACkD,GACxBT,EAAcS,EAAMC,OAAO5D,QA4GzBK,UAzFY,SAACsD,GAGjB,IAAIE,EAEJ,GAHAF,EAAMG,iBAGFrC,EAAQsC,MAAK,SAAA9C,GAEf,OADA4C,EAAc5C,EACPA,EAAOS,OAASpB,MAIrB,GAAIsB,OAAOC,QAAP,UAAkBvB,EAAlB,2EACJ,CACE,IAAM0D,EAAc,2BACfH,GADe,IAElBlC,OAAQnB,IAGVsB,EACSkC,GACRjC,MAAM,SAAAC,GAELR,EAAYC,EAAQc,KAAK,SAAAtB,GAAM,OAAIA,EAAOS,OAASmC,EAAYnC,KAAOsC,EAAiB/C,MACvFqC,EAAoB,UAAF,kBAAwBO,EAAYnC,UAGvDS,OAAM,SAAAC,GAELkB,EAAoB,QAAF,yBAA6BO,EAAYnC,KAAzC,sDAvB1B,CAgCA,IAAMuC,EAAa,CACfvC,KAAMpB,EACNqB,OAAQnB,GAGZsB,EACOmC,GACJlC,MAAK,SAAAC,GAEJR,EAAWC,EAAQyC,OAAOlC,EAAS0B,OACnCJ,EAAmB,UAAD,gBAAqBW,EAAWvC,OAGlDuB,EAAY,IACZC,EAAc,OAGff,OAAM,SAAAC,GAELkB,EAAmB,QAAD,0CAA6CO,EAAYnC,cAoC7E,uCAEA,kBAAC,EAAD,CAASF,WAAYA,EAAYC,QAASA,EAAS3B,OAAQA,M,MClIjEqE,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.5f41afb1.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({filter, handleFilterChange}) => (\n    <div>\n        filter shown with: <input value={filter} onChange={handleFilterChange}/>\n    </div>\n)\n\n\nexport default Filter\n","import React from 'react'\n\nconst PersonForm = (props) => {\n\n    return (\n        <form onSubmit={props.addRecord}>\n          <div>\n            name: \n            <input\n              value={props.newName}\n              onChange={props.handleNameChange}\n            />\n          </div>\n          <div>\n            number:\n            <input \n              value={props.newNumber}\n              onChange={props.handleNumberChange}          \n            />\n          </div>\n          <div>\n            <button type=\"submit\">add</button>\n          </div>\n        </form>\n    )\n}\n    \n\n\nexport default PersonForm","import React from 'react'\n\nconst Button = ({onClick, text}) => (\n\n    <button onClick={onClick}>\n        {text}\n    </button>\n\n)\n\nexport default Button","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    return axios.get(baseUrl)\n}\n\nconst add = (person) => {\n    return axios.post(baseUrl, person)\n}\n\nconst modify = (person) => {\n    return axios.put (`${baseUrl}/${person.id}`, person)\n}\n\nconst remove = (id) => {\n    const person_url = `${baseUrl}/${id}`\n    return axios.delete(person_url)\n}\n\nexport default {\n    getAll,\n    add,\n    remove,\n    modify\n}\n","import React from 'react'\nimport Button from './Button'\nimport PersonsService from '../services/persons'\n\nconst remove_person = (setPersons, persons, id, name) => {\n\n    if (window.confirm(`Do you really want to delete ${name}?`)) { \n        PersonsService\n        .remove (id)\n        .then (response => {\n            console.log (response)\n            setPersons (persons.filter(person => person.id === id ? false : true))\n        })\n        .catch (err => {\n            console.log ('failed')\n        })\n    }\n\n}\n\nconst Person = ({ setPersons, persons, person }) => (\n\n    <div>\n        <span>{person.name} {person.number}</span>\n        <span><Button onClick={() => remove_person (setPersons, persons, person.id, person.name) } text=\"remove\" /></span>\n        <br/>\n    </div> \n\n)\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\n\nconst Persons = ({ setPersons, persons, filter }) => (\n    \n    persons.map (person => {\n\n        if (person.name.toLowerCase().indexOf (filter.toLowerCase()) !== -1) {\n\n            return <Person key={person.name} setPersons={setPersons} persons={persons} person={person} />\n\n        }\n\n        return \"\"\n\n    })\n\n)\n\nexport default Persons","import React from 'react'\n\nconst Notification = ({ type, message }) => {\n\n    if (message === null)\n        return null;\n    \n    console.log(type)\n    console.log(message)\n\n    \n\n    return (\n\n        <div className={type}>\n            {message}\n        </div>\n\n    )\n\n\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport PersonsService from './services/persons'\nimport Notification from './components/Notification'\n\nlet notificationType = null\n\nconst App = () => {\n\n  const [ persons, setPersons ] = useState([])\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n  const [ filter, setFilter ] = useState ('')\n  const [ notificationMessage, setNotificationMessage ] = useState(null)\n\n  const handleNameChange = (event) => {\n      setNewName (event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n      setNewNumber (event.target.value)\n  }\n\n  const handleFilterChange = (event) => {\n      setFilter (event.target.value)\n  }\n\n  const handleNotification = (notification_type, message) => {\n\n    notificationType = notification_type\n    setNotificationMessage (message)\n\n    setTimeout (() => {\n      notificationType = null\n      setNotificationMessage (null)\n    }, 5000)\n\n  }\n\n  const addRecord = (event) => {\n\n    event.preventDefault()\n    let curr_person\n\n    if (persons.some(person => {\n      curr_person = person\n      return person.name === newName\n    })) \n    {\n        \n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`))\n        {\n          const updated_record = {\n            ...curr_person,\n            number: newNumber\n          }\n\n          PersonsService\n          .modify (updated_record)\n          .then (response => {\n\n            setPersons (persons.map (person => person.name === curr_person.name ? updated_record : person))\n            handleNotification (\"success\", `Updated ${curr_person.name}`)\n\n          })\n          .catch(err => {\n\n            handleNotification (\"error\", `Information of ${curr_person.name} has already been removed from the server`)\n\n          })\n          \n        }\n        \n        return\n    }\n\n    const new_record = {\n        name: newName,\n        number: newNumber\n    }\n\n    PersonsService\n      .add(new_record)\n      .then(response => {\n\n        setPersons(persons.concat(response.data))\n        handleNotification(\"success\", `Added ${new_record.name}`)\n\n        \n        setNewName ('')\n        setNewNumber ('')\n\n      })\n      .catch(err => {\n\n        handleNotification(\"error\", `An error occured. Could not add ${curr_person.name}`)\n\n      })\n\n  }\n\n  const effect_hook = () => {\n\n    console.log (persons)\n    PersonsService\n      .getAll()\n      .then(response => {\n        console.log('getAll promise fulfilled')\n        setPersons(response.data)\n      })\n  }\n\n  useEffect (effect_hook, [])\n\n  return (\n    <div>\n\n      <Notification type={notificationType} message={notificationMessage} />\n\n      <h2>Phonebook</h2>\n\n      <Filter filter={filter} handleFilterChange={handleFilterChange} />\n        \n      <h1>add a new</h1>\n\n      <PersonForm \n        newName={newName} handleNameChange={handleNameChange}\n        newNumber={newNumber} handleNumberChange={handleNumberChange}\n        addRecord={addRecord}\n      />\n\n      <h2>Numbers</h2>\n\n      <Persons setPersons={setPersons} persons={persons} filter={filter} />\n\n    </div>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}